server:
  port: 8085

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      default-filters:
        - TokenRelay=
      routes:
        - id: wine-command
          uri: lb://wine-command
          predicates:
            - Path=/wine-command/**

        - id: wine-query
          uri: lb://wine-query
          predicates:
            - Path=/wine/**

        - id: ai-service
          uri: lb://ai-service
          predicates:
            - Path=/ai/**

        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/**

        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
    consul:
      discovery:
        hostname: localhost
        enabled: true
        register: true
        health-check-path: /actuator/health

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8081/realms/springboot-microservice-realm/protocol/openid-connect/certs
          issuer-uri: http://localhost:8081/realms/springboot-microservice-realm
      client:
        provider:
          keycloak:
            issuerUri: http://localhost:8081/realms/springboot-microservice-realm
        registration:
          microservice-auth:
            provider: keycloak
            clientId: microservice-auth
            #clientSecret: CWoQ7fBBHW64GCe711uNWLqWZ95psbHY
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            #clientSecret: YJpPuRsd7owUtCg9YvrqnfEGFSLdCwhG
            clientSecret: Wi6Sg371ZZdReLMEM2I0XaPUqoGNLEzz
            authorizationGrantType: authorization_code
            scope: openid

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true